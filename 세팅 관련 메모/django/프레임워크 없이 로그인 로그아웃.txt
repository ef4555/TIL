로그인 기능 만들기
사전 설정
1. accounts 앱 만들고  settings에 등록
2. url 분리 및 매핑


1. models에서 usermodel 정의
# account/models.py
from django.contrib.auth.models import AbstractUser

class User(AbstractUser):
	pass

2. 
# settings.py
AUTH_USER_MODEL = "account.User"

3. admin.py에 커스텀 User 모델을 등록
# admin.py
from django.contrib import admin
from django.contrib.auth.admin import UserAdmin
from .models import User

# Register your models here.
admin.site.register(User, UserAdmin)

view 함수에 
from django.shortcuts import render, redirect
from django.contrib.auth.forms import AuthenticationForm
from django.contrib.auth import login as auth_login
from django.contrib.auth import logout as auth_logout
임포트


로그인 페이지 작성
1. url.py에서 path 잡아줌(login) -> views의 login 함수로 이동
	1.  view에서 login 함수
		1. 처음 들어갔을때는 빈 form을 보여줌
		2. POST로 정보 보냈을 때는 유효성 검사 후 index.html로 보내줌
2. login.html 만들고 form으로 정보 받아서 views의 login함수로 보냄
	-  POST로 정보 보냈을 때는 유효성 검사 후 index.html로 보내줌


base.html에서 인증 관련 데이터는 바로 사용 가능 ( {{ user }} )
-settings.py의 context processors 설정값 때문]
-로그인한 사용자를 나타내는 User 클래스의 인스턴스가 템플릿 변수 {{ user }} 에 저장됨

로그아웃 페이지 작성
1. url.py에서 path 잡아줌(logout) -> views의 logout 함수로 이동
	- view에서 logout 함수
		- POST로 정보 보냈을 때 유효성 검사 후 index.html로 보내줌
2. logout 함수 
	- articles:index로 보내줌
